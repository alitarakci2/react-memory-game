{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a\\\\Desktop\\\\memory-game\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport cardImages from \"./Components/Images\";\nimport './App.css';\nimport Header from \"../src/Components/Header\";\nimport Grid from \"../src/Components/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n  useEffect(() => {\n    shuffleCards();\n  }, []);\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      setDisabled(true);\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        backToDefault();\n      } else {\n        setTimeout(() => backToDefault(), 500);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  const backToDefault = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setDisabled(false);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      turns: turns,\n      onShuffle: shuffleCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      cards: cards,\n      choiceOne: choiceOne,\n      choiceTwo: choiceTwo,\n      disabled: disabled,\n      handleChoice: handleChoice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"zpj1OC3lPd52QG2dCYHCz30icbw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","cardImages","Header","Grid","jsxDEV","_jsxDEV","App","props","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","card","id","handleChoice","src","prevCards","matched","backToDefault","setTimeout","prevTurns","children","onShuffle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/a/Desktop/memory-game/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport cardImages from \"./Components/Images\";\nimport './App.css'\nimport Header from \"../src/Components/Header\";\nimport Grid from \"../src/Components/Grid\";\n\n\n\nconst App = (props) => {\n    const [cards, setCards] = useState([]);\n    const [turns, setTurns] = useState(0);\n    const [choiceOne, setChoiceOne] = useState(null);\n    const [choiceTwo, setChoiceTwo] = useState(null);\n    const [disabled, setDisabled] = useState(false);\n\n\n    const shuffleCards = () => {\n        const shuffledCards = [...cardImages, ...cardImages]\n        .sort(() => Math.random() - 0.5)\n        .map((card) => ({...card, id: Math.random()}));\n        setCards(shuffledCards);\n        setTurns(0);\n    };\n\n    useEffect(() => {\n        shuffleCards();\n    }, []);\n\n    const handleChoice = (card) => {\n        choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n\n    };\n\n    useEffect(() => {\n        if (choiceOne && choiceTwo) {\n            setDisabled(true);\n            if (choiceOne.src === choiceTwo.src) {\n                setCards((prevCards) => {\n                    return prevCards.map((card) => {\n                        if(card.src === choiceOne.src) {\n                            return { ...card, matched: true };\n                        } else {\n                            return card;\n                        }\n                    });\n                });\n                backToDefault();\n            }else{\n                setTimeout(() => backToDefault(), 500);\n            }\n        }\n    }, [choiceOne, choiceTwo]);\n\n    const backToDefault = () => {\n        setChoiceOne(null);\n        setChoiceTwo(null);\n        setDisabled(false);\n        setTurns((prevTurns) => prevTurns +1);\n    }\n\n    return (\n        <div>\n           <Header turns={turns} onShuffle={shuffleCards}/>\n           <Grid cards={cards} choiceOne={choiceOne} choiceTwo={choiceTwo} disabled={disabled} handleChoice={handleChoice}/>\n           \n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}